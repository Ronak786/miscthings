文法：
	就是语句的形式，名词 动词 副词，按照顺序就能构成句子
	利用文法可以定义一种语言（同样利用列出语言的所有词，以及列出包含词的标准的方法也可以）

	文法中的终结符指不可替代的词，非终结符指可替代的词，通常是通用泛指的词,还有初始符，
		是文法的开始
	产生式： 从词汇表的元素构成的串 利用替代规则产生的新串的过程规则
	派生： 从一个串到另一个串叫做派生（两个都在原始的集合里）(可以经过多次传递而派生）
			利用产生式派生
			L(G) 表示 从初始串可以派生所有用终结符产生的串

		所以可以利用文法的这种表示方法来描述一个集合的元素
			给定初始，产生方法，就可以派生直到终结符为止

	短语结构文法类型：
		0型  没有产生式限制
		1型  只能产生不短于自己长度的串，而且是上下文相关文法，就是会有上下文限制使用
		2型  上下文无关，
		3型  正则文法，有生成的规矩，具体见书p624
		
	派生树（语法分析树）：
		在上下文无关语法中，可以自顶向下替换直到找到树叶是所要的值

	巴克斯-诺尔范式：
		一种可以合并同一个出发点的产生式的方式
		<A>::=<A＞｜＜ｂ＞　．．．
	状态机：
		初始状态，状态的集合，以及转移函数，输出函数，可以得到一系列的输出状态
		转移函数用来根据输入得到下一个状态
		输出函数用来根据输入得到一个输出值 ，不一定是作为下一个输入值

		不同状态的区别在于会对于同样的输入产生不同的结果，所以需要多状态

		定义状态机能识别L，当L为输入并且最后在状态机里产生1为输出

	不带输出的状态机：
		拥有自动终结状态的机器，
	词汇表中子集的连接：
		子集中字符串的各种组合

	有限状态自动机：
		将输入转化成一个终结输出状态，期间不产生输出,输入输出状态都在
			总状态表里面
	扩展转移函数：
		对于一连串的输入，每个状态按顺序处理系一个输入字符

	状态机简化：
		一般制作的状态机会有冗余，简化就是减少冗余
