json
    使用jsonobject解析
    
date simpledataformat
    前者接受unix时间，后者构造格式然后接受date的时间对象，输出时间

String
    可以切分字符串

DecimalFormat
    用于精确数字

color
关于颜色值的注意事项：在 Java 代码中，你可以参考 使用颜色资源 ID（如 R.color.magnitude1、R.color.magnitude2） 在 colors.xml 文件中定义的颜色。尽管仍需将颜色 资源 ID 转换为颜色整数值。示例：

 int magnitude1Color = ContextCompat.getColor(getContext(), R.color.magnitude1);


 URI
    URL要转换成URI才可以给intent ACTION_VIEW    使用
    URI.parse(URL)


权限
    usess-permission 。。。
    默认允许的正常权限如上网，获取网络状癌等，
    危险权限需要手动同意，如使用摄像头

    不管什么权限，都要再manifest里允许一下

URL
    conn = url.openconnection
    conn.connect
    conn.getinputstream
    inputstreamreader(stream, charset)
    然后可以读取
    must handle  ioexception

try catch
    unchecked exception : runtime exception 及子类
        这些不必要throws或者catch，一般都是没必要处理的，因为出错说明
        不正常，
        像ioexception是正常异常

线程：
    不要阻塞主线程，所以不要主线程进行网络连接，或发生错误的exception

    推荐使用asynctask类的子类完成，重写doinbackground方法，
        再postexecute中调用本地方法，然后执行本地操作
        因为ui更新最好在同一个线程完成！！这个线程不安全

        这个适用于短期一次性任务

        在backgorund中调用publishprogress，然后重写
            onprogressupdate方法，可以更新进度条
        onpostexecute在主线程中被执行后台结束后调用

        asynctask是泛型的，重写方法需要的参数要在execute调用的时候穿进去
            不需要的泛型参数在生成特定类的时候使用Void代替

Loader:
    asynctask会在每次重新打开或者旋转屏幕的时候重新创建应用的时候重新运行，
        这个会浪费，如果以前的哪个还没运行完毕，
        用loader可以解决这个问题, 应用消失也会自动清楚loader，不会滞留
        旋转设备直接从initloader找到已有的然后进入finishedloader

        但是如果是Home退出，再进入，会刷新loader的数据的

    getLoaderManager().initLoader(id, null, this)
        loader每个id只存在一个对应loader对象
        不存在的话，调用this对象的oncreateloader方法（自己实现）

    使用：
        首先要有一个继承asynctaskloader的类，用来实际把background任务放进去，
        然后activity继承callbackloader，实现oncreate onfinished，onreset，
            也可以实现onstartloading（这个会init之后自动调用forceload）
            不然手动调用forceload就行了


内部类
    实例只能存在于外部类的实例里面，


inputstreamreader 这个设置编码
bufferstreamreader 这些用来读取流

设置空屏幕：
    在你的屏幕view 同级别设置一个空textview，然后
        设置setemtpyview（textview）这样如果listview么有成员，就会显示
            这个空view，你可以在里面放东西，不要再加载开始就放东西，不然
            会闪现，应该在第一次加载结束后加

progressbar
    把这个通过relativelayout的方式添加到屏幕中间，
        显示一个圆圈，然后再加载完毕后设置这个view不可见即可

设置额外的setting菜单
    这个需要一张activity 然后再oncreateoptionmenu的时候用inflate显示图标所在layout用layout可以再当前页面上显示
    再onoptionsitemselected内用intent转到新的页面
    再fragment标签的name 里设置需要的fragment的名字和位置，这样可以引用
        它的内部oncreate方法创建项目

        代码中使用sharedprefenence获取需要的值

    sharedprefenence:
        这个设置有些复杂具体看extra文件

redirect:
    java内http到https的往返重定向不能使用URL类的setfollowredirecct方法，
    需要手动获取getheaderfield的location，重构url，然后获取新的内容，
    记得重新设置cookie等
