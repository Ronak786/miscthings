其他：
    libc++是mac的
    libstdc++是gnu的，一般都是这个 ,在clang -stdlib=libc++ = libstdc++可以修改, 默认好像是gnu的
共享名称
    使用设计模式共享名称，交流方便，
    库给了你方便的调用实现
    模式给了你组织函数调用的方法
    即使没有模式使用，也可以利用抽象封装继承多态，提前想到需要的部分预防
现象
    把易于变化的部分封装起来，作为一个单独的类，这样不用每次修改，每个子类继承的时候都重复修改了，直接复用变化部分的类的继承体系中的
    某个就行了. 行为也可以是某种类，因为行为也有状态，也有具体的动作 
    复用的类可以作为参数，可以直接在内部构造中用作初始化

    用虚函数用继承，不如使用这种额外类的方法,而且这样可以动态改变使用的组合类成员

tip：
    少用继承，多用组合
    继承要秉持is-a的关系注意，一般组合比较好而且可以动态修改

学名 策略模式
    把动态可改变的部分提取出来，作为算法族，组合起来
        使用java的名称，算法族中是实现关系，实现算法的抽象接口
        而类里面是继承关系，以及和算法是组合关系

现象
    需要在某件事情发生的时候执行一系列动作，还要保证动作的可扩展性
学名 观察者模式
    主题就是观察对象，接受通知的就是观察者
做法：
    分为观察者以及主题，主题有公共的订阅，删除订阅和通知函数，利用抽象基类
                        观察者有公共的可被调用函数
                        把观察者注册到主题上，观察者本身留一个指针
                        这样观察者可以控制删除
