ax bx cx dx si di sp bp

sp每次移动偶数，push在移动之后放数进去
ax 累加用
bx 作为基地用  利用 num (bx) (si)这种变址寻址的方式来寻址基址在ｄｓ中的段中以ｂｘ为基准的ｓｉ标号的地方
cx 计数
dx 附加的
sp bp 栈
si di 索引

每个段寄存器代表一个65536字节的段

直接寻址 也是使用ds为段基址来寻址的
使用寄存器来标志当前操作 使用的操作位数

loop 指定近128字节上下的地址范围
jmp 段内跳转，不超过128字节上下(条件跳转只能段内)
sub a,b   a=a-b   
cmp a, b   return a-b

系统调用:
逆序压栈参数，然后系统调用号， 如果参数需要多个寄存器，先压高位，
返回值在ax 或dx：ax， 



浮点数：  
单精度： 1符号 8指数 23 尾数
双精度   1符号 11指数 52尾数

符号 正负
指数，这里是余数码的表示，就是这里的数字是真正的指数值+ 2^(指数-1） -1的值，
尾数， 默认小数点前有个1

当指数，尾数不为0，正常表示
当指数最大，尾数为0，无穷
当指数最大，尾数不为0， NAN
当指数为0，表示-127（单精度）， 此时小数点前的1变为0，如果全0，就表示0

汇编：
	助记符就是帮助记忆机器码的符号，包括寄存器的符号化，称为汇编语言

过程：
	第一遍扫描，预留内存，计算标号地址
	第二遍扫描，代码生成
	编写的时候可以代码数据段多个，连接器会重排序让各自段只存在一个

标号：
	全局可以字母数字组合， 数字只能正文段 , 后加冒号
	.BYTE .LONG .WORD 影响同一行剩下的部分
