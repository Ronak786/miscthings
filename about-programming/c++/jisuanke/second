c++ 里struct没有独立名字空间，和c不一样，所以不能struct foo foo;
struct 默认是public，继承也是默认public
数组的使用
    array xxx[]{xxxxx} 可以直接初始化的
    构造：
        这种不带等号的{}初始化成为 universal construction
        当没有构造函数的时候,这种初始化会按顺序初始化每个成员
        尽量不要在构造函数体才输出话变量

        默认初始化
            默认情况下没有初始化的在类里面初始化为0
            可以在变量上直接{} 初始化
            如果类中某个成员没有默认构造，那默认不会生成构造，=default 等同于 =delete
            初始化尽量使用{} 而不是等于的形式, char *buffer{new char[1]{'\0'}};, int length{0}

        移动，复制构造默认生成，除非不能，如果有一个，其他都不会有的
            赋值函数= 注意判断是否是本身，设计delete过程


    右值左值
        右值临时变量，可以const type &a = 1绑定, 作用是减少复制过程，
                右值进来的保证了你可以把内部摘出来，而不会导致错误，原类里保证了会做处理
            &&接受临时变量, 所谓临时对象，基本指的就是放在等号右边的那些构造出来的对象
                如 a = classname(var); 这个就会调用移动构造，因为构造完了就没用了
            但是之后内部再传递的时候，会变成左值，
            std::move 制造右值
        
            右值传惨中的作用
                右值作为参数，那么传进去左右值属性，const属性完全不变，很有用,左值不行的

            什么时候是右值
                return 局部变量的时候
                表达是返回值类型的时候
                返回右值的时候 但是T&&不一定是右，会折叠

    explicit:
        单参数非复制构造函数，防止隐式转换，也就是如char* 转换成string
        forward move 返回右引用(forward保持原来）
