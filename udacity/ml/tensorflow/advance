save:
	save = tf.train.Saver()
		这个在存，取的时候都这样做，都可以指定变量的名字，指定了就只对特定变量其作用了
		可以利用list一次性指定多个变量，
		可以利用字典在指定的同时指定变量存或者取时候放到变量的对方的名字，如果变量改名了
			这个有用，（文件里的名字是ａ，变量现在是ｂ，有名字ｃ,{"a":b}就会恢复到b里面去
			还要试一下
	save.save(sess. datadir) 可以保存当前变量，图结构(非变量不能保存！！）但是操作可以通过
			操作的名字访问，比如tf.get_default_graph().get_tensor_by_name("add:0")

	save　存的时候取的时候都可以指定变量，以及指定要命名的名字
			利用列表指定要包含的变量，　利用字典制定要更改的名字

		存：
			字典指定对应的变量到文件后的名字，"string":var　　var是脚本中的变量名，不是后面的ｎａｍｅ，
				string是存入的名字
			list 的话用变量名指定
		取：
			同样的字典结构，同样的知代，如果没有字典，要求文件中的名字和变量的名字一致

		默认的名字是 Variable  Variable_xxx(第二个开始）

保存图：
	tf.python.framework.graph_util
	具体是获取图，保存计算节点到文件，
	恢复的时候，读取，导入到相应变量
	就可以sess.run(var)了

	save.export_meta_graph() 可以到处图到文件json格式
		其中定义了每个运算，运算的输入输出, 以及对应的属性（就像css一样）

	包含：
		meta info ==> op list:操作的列表
		graph_def ==>node def: 各个计算节点间互相联系的描述(以及各种操作的名称(唯一），对应的操作op)
				node 中ｎａｍｅ唯一，ｉｎｐｕｔ对应输入节点以及是第几个，０省略
		saver_def
			设定保存和回复的一些信息
		collection-def	
			保存变量的管理集合

tf.train.NewCheckpointReader
	用于读取变量保存的文件，具体在书１２５可以获取变量
