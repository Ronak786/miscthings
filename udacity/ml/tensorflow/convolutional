卷积：
	这个的意思是用一个过滤器，把输入矩阵中规定一个尺寸，
	从这个尺寸取数，加上每个像素的深度的值，long * width* depth 再乘以输出的深度
	就是这个尺寸范围的输出了，
	其中输出会被缩小维度，但是深度会增加，所以过滤器一次只会对一小部分进行过滤．

	填充：
		可以对元数据填充，这样输出的就可以和原来同样维度了
	方法：
		tf.nn.conv2d(input, filter, strides, padding)
		tf.nn.bias_add(xx,bias) 会给每一项加入bias 而不是仅仅加一行的

	每一层卷积的参数对于当前的所有尺寸范围的输入都是相同的，ｂｉａｓ也一样，
	这样减少了参数矩阵大小

池化：
	就是缩减长宽，深度不减，为了减少最后全链接的计算，减少过拟合
	tf.nn.max_pool / avg_pool

inception: tf.contrib.slim
	另外一种，这是一种并联的卷积方式, 将多个卷积层进行连接相加，
		虽然不同的过滤器，但都用填充的方式获得同样维度的输出
		利用tf.contrib.slim.concat 链接叠加

