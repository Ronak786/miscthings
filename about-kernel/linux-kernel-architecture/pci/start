pci_register_driver
id table:
 struct pci_device_id [] = { PCI_DEVICE(vendor, device), {}}

 MODULE_DEVICE_TABLE to export this table to userspece for module install
name,
probe,
remove
these are four necessary fileds in driver

pci_unregister_driver

pci_get_device(vendor device, from) to get a struct pci_dev of an existing device
	this will just call pci_get_slot

pci_enable_device to enable a device(set up interrupt or io/mem regions)

pci_read/write_config_byte/work/dwork to access pci config place in pci
io/mem map place use in/out   readb  ioread to access

all pci resources are got by kernel subsystem. so driver only needed  to just get that resource:
	pci_resource_start
	pci_resource_end
	pci_resource_flags

pci interrupt number stored in 60th byte of config

pci provides  read write config ops in bus->ops {read /write}





