通讯类型：
	uart 异步 字节单位，字节间间隔不定，字节内间隔固定
	i^2c spi can ethernet modbus


uart：
	单片机中  高电平 5v  低电平 0v
	rs232 计算机口， 高-12  低 12v
	所以芯片与计算机间需要 电平转换芯片  ch340t（下载通讯）  max232
		经过两个转换后  -12 变成了+5v给单片机  
		ch340t 是usb通讯，插usb口的线
		max232是串口通讯，插usb转9针db口线
		
		通讯线tx连rx  rx连tx，地共同,作为共同的电势参考最低点
		

	并行通信数据线较多，传输长易出问题，串行好一点

	异步容易实现，不需要同步，但是需要校验（每一个字节都要）
		一开始高电平，有数据了，先低电平(起始位），然后是8位数据
		先低后高，传完8位再发一个停止位(高电平）

		模式0：不用
		1：平时高，起始位0，中间8位，停止位高
		2，3：添加奇偶校验位一个

		波特率： 位/每秒，发送一位的时间的频率
		sbuf，串口数据缓冲寄存器，单片机自动存取这个里面的数据，
			我们只要读写这个里面的就行了

		scon寄存器：控制：
			sm0 sm1，模式选择，可以影响频率的选择
			可以选择是否接受数据
			校验位选择， 发送结束和接受结束标记（因为
				发送接收公用中断，所以需要标志判断）

串口发送：
	选用串口模式1，在SCON中设置，，以定时器1的模式2中循环装载作为串口频率发生器，
	然后打开串口rxtx中断，打开定时器，即可。
	在中断中要把rx tx的对应ti ri被硬件置1 的置0，发送数据只要读写SBUF即可

	可以利用两个定时器同时驱动数码管以及串口，
		注意设置tmod因为两个定时器都要设置，要用与或，而不是直接赋值！！！

	串口的特点是SBUF既用于发送，也用于接受，赋值就会发送，接受就是取值，
		所以可以在取值后REN= 0来屏蔽接收，这样sbuf就不会一直改变了，
		然后sbuf赋值发送，发送中断里再打开ren这样，就可以两边通信了
		（当然也可以不开中断，直接循环测试 ti ri来判断发送接收完毕）

		发送字符串，在主循环里发送，每发送一个，检验ti，标记为1后置0，再
		发送下一个即可
问题：		不过问题是我使用中断中输出的方法结果居然不可行，就是用一个
			普通函数中的标记来控制中断中的输出，结果一直阻塞，怀疑和使用的
			内存有关，找到错误的变量位置了

	
组合：
	和旋转编码器以及数码管，按键的组合可以来制造串口输入输出，
	要注意消抖（判断两次或者延时10ms），以及按键重复（在低电平的时候
	无线循环直到高电平）
