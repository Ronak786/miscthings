中断源，发中断的引脚，
中断响应，保护现场：响应中断做操作，同时把当前状态保存
中断返回：从中断回来
中断嵌套：高优先级中断中断低优先级的中断
中断屏蔽：不响应中断 

mc51
外部中断：通过外部引脚
内部中断：定时器溢出和串口

tcon寄存器
TF1 TF0 TR1 TR0 用于定时器的溢出和开始运 如果用中断方式，tf 会在转入中断程序的时候自动清零
it0 it0  外部中断脉冲触发（下降沿），  为0：电平触发，低电平有效
ie0 ie1  外部中断出现有效请求时，硬件置1，当开始转向中断服务程序，清零
scon 串口控制器  t1 发送一帧后置1，转向中断后软件清零
				r1 接受数据后置1，中断历程里清零

ie 中断控制寄存器
	ea 控制所有中断的允许
	ex0 ex1 外部中断允许 es  串行允许
	et0 et1  内部定时器中断标记

ip  中断优先级控制
	同级优先：外部0 定时器 0 外部1 定时器1 串行 这些都是同级，所以互相不能抢断
		只有配置了高优先级，才能抢断低优先级  
		这个顺序也是中断向量号的顺序，0 1 2 3 4
			在中断函数 函数名后面要跟 interrupt 【number】 来表明自己是中断程序

		中断号*8+3 = 中断入口地址

	如何使用：
		EA 打开 允许所有中断
		ET1 打开，允许内部定时器1的中断
		然后编写中断函数，后加 interrupt 3
		打开运行定时器
