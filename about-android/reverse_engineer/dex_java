java to dex:
	javac xxx   -o java.class
	dx --dex output=xxx xx.class   : get dex
	dexdump -d xx.dex  : show dex detail
	javap -c -classpath.  xx   : show java .class detail

dex file format:
	dex header: struct DexHeader {}
		has  a map at mapoff offset, inside it, 
		has all kinds of data types' offset and number 
		like string, classname, field , data .....

dex has dex format:
	a header include all fileds array and size, a map size
	and data, every instruction can be decoded by from android website's bytecode,
	remember  all structure in dexclass.h use leb128 instead of u4,
		leb128 every 8bit's topbit is 1: next byte used, else, just currentbyte,
			effective bit only 7

odex:
	a super struct contain dex, convenient for latter execute
	have a odex header, and tailing dependencies lib names, dex class lookup chunk
		method/field/class map chunk, end chunk

dexopt optimize processing:
	read, check and verify crc and signature, rewrite codes
		into volative and quick instructions
