内核对象
	内核对象属于整个内核，而不是一个进程，本身有引用计数，创建函数里有一个security_attributes结构体，
	不然可能是用户对象或者gdi对象
	sysinternalssuite 中的winobj可以查看 objecttype

	handle 这个其实是一个进程的内核对象表中的索引，要移位才是真实索引

	继承：
		首先创建内核对象的时候传入securityattribute的interithandle设置true
		然后createprocess的时候设置interithandle true这样就可以把父进程的表中对应对象复制
		到子进程的表中，同样位置，
		然后还要通过命令行参数传入handle的值，或者通过环境变量，getenvironmentvariable获取也可以
			或者父进程等待子进程初始化完成后传入消息告知handle

		动态设置继承flag，
			sethandleinformation
			sethandleinformation 用来测试

	命名对象：
		create的时候可以取名字，不过如果名字存在，会返回alreadly exists， 如果类型不一样，会invalid handle，
		如果一样，那就是返回那个存在的对象，
		可以用open* 函数来代替，这样只会打开不会创建了

	命名空间
		运行终端服务的windows每个终端服务有自己的空间，可以在创建名字的时候使用Global\\name Local\\name来明确指定
		放入的空间，默认自己的空间
		利用createprivatenamespace 配合boundarydescriptor创建自己的空间，然后可以在里面和上面一样创建对象，
			这样防止名字覆盖

	复制handle
		duplicatehandle(srcprohandle, srchandle, targetprohandle, targethandle ..)
		把source的复制到dest进程中，src可以是主调进程自己
		还可以和linux的dup一样，给自己复制一个handle，只读用
