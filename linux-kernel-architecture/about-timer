a big question: who set the system send signal in HZ frenquency ? 
		after change to hrtimer,use hrtimer emulate tick_period,then who
			wake up the hrtimer periodically, 
			I just set call back functions,but who called them ?
low resolustion clock: jiffies , 
high resolution clock: hept, tsc
	when startup, we register clocksource(used for time read when needed, eg. gettimeofday)
			register  clockeventdevice, used as timer,(this one can emit interrupt)
	when startup in hpet_time_init(which is x86 default arch dependent operation),
		we will set timer_interrupt(arch/x86/kernel/time.c 64) as time interrupt.
			which is just hpet's time handler(set when register clock event in hept)
			this one will be invoked when timer interrupt happened,
			then do regular work,add tick and scheduler_tick ....
			then flag in hpet's mode is just a hint to the kernel,
				not for hardware
	timer processes:  start_kernel->time_init()(just set a function)
		    start_kenrel->x86_late_time_init->hpet_time_init->hpet_enable(set hpet clock event device)
					 ->setup_irq(set handler functions of time interrupt,used
						as global_clock_event(set when in hpet clockevent register))
			then we have tick handler(use tick_set_peroidic,
				(note this is diff from hpet_set_periodic,tick used for timer interrupt
						the latter used for normal timers)
	hpet timer register: hpet_enable->(some register config)
					->register clocksource , set curr_clocksource to best
				->register clockeventdevie-> tick_check_new_device->(setup handler period)
					set tick_device(that is cpu specific,so can be directly accessed

timerkeeper:
	this structure used to keep system time specific  data , like monotonic time, wall time
		ntp time...

softirq:
	just a little,  softirq for timer interrupt is initialized in init_timer,just an assignment
		the truly run function is __run_timers, it will check timer_base(per cpu timer managment),
			then do decidecd work 
timer_base: 
	used for low resolution timer per cpu data

attention:  tick_periodic is used whenever time interrupt happened,is set when register hrtimers clockevent 
	    __run_timers  is used when softirq is raised up and is set in init_timers


