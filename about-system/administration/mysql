mysql --help 可以查看配置文件的读取顺序

show variables liek 'datadir' 获取数据存储路径
show variables like 'socket' 获取socket 路径，这个可以利用mysql -S /tmp/sock.sock 来连接

innodb 有master thread， io thread， purge thread（回收undolog的使用空间），
            page cleaner thread，辅助master刷新脏页

innodb stats：
    show engine innodb stats\G;
    或者 select xxx from information_schema.innodb_xxxxx表
缓冲池
    用来加速，一般设置，innodb_buffer_pool_size 是速度的关键
                        innodb_buffer_pool_instances 表示缓冲池的实例数量，多个
                            减少竞争
    innodb缓存管理缓存页的方式lru优化，插入的新页的位置有innodb_old_blocks_pct控制，
        默认在尾端37%左右，缓存也默认16k大小
        一般的缓存根据插入点分为old 和new两部分， 有个block time控制了old可以转为new的时间，
            hit rate命中率如果95%一下就不好了
        lru len, unzip lrulen
            后者包含非16k的页，包含在前者内
            unzip 分配的方法是内核使用的buddy 内存分配法

    flush列表，用来管理脏页的刷新，同时页也存在于lru表用于缓存的
        select from innodb buffer page lru where oldest_modification > 0
        表示可以查到当前脏页

    innodb_log_buffer_size
        重做日志缓存，只要保证1s，后面会刷新到重做的文件里
        刷新时机
            每秒；每次事务提交，缓存空间少于1/2

    除了数据和索引页，还有自适应，插入索引，锁信息等
        还有额外内存池，这个用于分配一些额外的帧缓冲之类的，additional buffer选项可以设置值

checkpoint
    用来控制刷新到此判断进度的机制
    主要有master thread的周期性刷新
        page cleaner的控制free page数量刷新，这个innodb_lru_scan_depth参数控制
            这个线程还包括了异步/同步刷新功能，当checkpoint的未刷新数量的lsn编码
            超过了文件总量的一定百分比，开始异步刷新，再超过一定的，开始同步刷新

        innodb_max_dirty_page_pct 表示最多可以用的脏页的百分比

    master工作方式
        一个loop ，内部每秒进行每秒工作，同时判断当前的负载是否适合进行脏页刷新以及
            undopage中无用的页删除 ,刷新脏页的过程是看当前是否超过70%，不超过刷10%，否则100页

innodb特性
    insert buffer
        后面叫做change buffer， innodb change buffer max size， 这个控制最大的buffer大小，
            这个主要用于（目前）insert delete update 非聚集索引（非primary）的改动的时候，
            而且是非唯一的才行，不然检查唯一的过程就产生了硬盘读的消耗，这里缓存所有的索引
            读写消耗，然后把属于底层同一个索引页的放到一起,合并后找时间一起输出。
        时机
            每秒io小于5， 输出5%
            每10秒小于200， 输出5%
    innodb_change_buffering 控制开哪个buffer

    double write
        写的时候，会先从缓冲拷贝到一块内存中，，然后再输入磁盘，好处是如果磁盘里页破坏，
            可以从内存空间中恢复一个副本
            innodb_dblwr_pages_written show status like ...
            查看实际的写的数量

    ahi 自适应哈希
        在你搜索100此以上某页（这里的页具体是什么结构的不知道现在），就会自动建立，对于
            where xx=xx的等值搜索，可以利用来加速，范围不行

    aio:
        异步io
        innodb_use_native_aio 控制是否使用os提供的aio技术，默认是否，可以打开它的
        innodb_flush_neighbors 表示是否刷新脏页的时候同时刷新周围脏页，机械硬盘建议开启，ssd不用
            可能会刷了不怎么脏的，以后还要脏
        innodb_fast_shutdown  
            控制是否关闭数据库的时候刷新数据到硬盘以及程度，这个主要影响再次启动的时候的数据恢复工作
        innodb_force_recovery 
            控制恢复的行为，阻止某些自动恢复操作，以供人工恢复
