watch command is good !!
action:
    accept 允许通过
    log 记录并传给下一个规则
    reject 拒绝,给出提示
    drop 丢弃

规则链：
    prerouting 路由选择前匹配
    input 入站处理
    output 出站处理
    forward 转发处理
    postrouting 路由选择后处理
        入 prerouting->input
        out  output->postrouting
        forward  prerouting->forward->postrouting
规则表： 默认状态与规则连的作用效果相反，比如这里全面禁止，链用来开口
    raw: 是否跟踪
    mangle 是否设置标记
    nat 是否修改地址端口
    filter 是否过滤 default table 
        匹配则停止

    实际是这样的，各个表对应各个内核模块功能，然后过滤是根据包的流向来的，就是上面说的三种，进出转发，
        在其中每种动作的时候，都会按照表的顺序，把里面对应的拥有的链的部分（和当前链一样的部分）按顺序
        添加进来匹配就是这样
       其实每个表都可以随意设置规则，但是不同流向的包只会经过不同的链，所以只会在某些相关的表里面，
        所以规则要特定设置，不要随便在任何表里设置，nat包含的就是地址修改的，mangle包含的就是包中标记等修改，
            filter包含的就是过滤是否drop还是acept的

iptables -P INPUT drop|accept 由于每个链在不同阶段调用，这个用于阶段结尾的默认其他行为，accept的话继续
                走，接着在其他阶段遇到其他链
        -F  clean 后面可以加链名
        -L check 后面可以加链名
        -A add new rule
        -R link_name  num  后面还要匹配的部分，不能省略，注意改的是动作
        -I num insert at head new rule
        -t table -D  链名 num delete
        -s source ip  ip,ip,ip,ip/mask,!ip(取反)不能同时使用这个 -d -s多个条件是与的关系
        -d dest ip
        -i interface input   INPUT PREROUTING  FORWARD
        -o interface output  POSTROUTING OUTPUT FORWARD
        -p protcol
        --dport  dest port  需要先指定使用的模块-m，这个是扩展匹配
            -p tcp  -m tcp  -dport xx 没有-m默认对应-p xxx
            range:
                -dport 22:25  :90 100:  以后或者以前所有

            -p tcp/udp -m multiport --dports 11,22,33 可以匹配多个离散port，使用--,用multiport模块
        --sport src port
        -v 显示更多的信息
        -n 不进行名称解析
        --line-number 行号
        -x 计算接受的包数量更精确
        -N  自定义链
            引用 -j 自定义链
        -E old new_chain_name
        -X 必须没有引用，没有规则

        iptables-save > /etc/sysconfig/iptables
        iptables-restore < xxxx  恢复，会覆盖

        iptables -P INPUT DROP  默认拒绝INPUT收到的包，除非匹配某个规则
        iptables -I INPUT -p icmp -j ACCEPT
        iptables -t filter(default) -A INPUT -j ACCEPT
        iptables -D INPUT 2

        allow ssh from 192.168.10.0/24
            iptables -I INPUT -s 192.168.10.0/24 -p tcp -dport 22 -j ACCEPT
            iptables -A INPUT -p tcp -dport 22 -j REJECT
        deny all accessing to 12345
            iptables -I INPUT -p udp -dport 12345 -j REJECT
            iptables -I INPUT -p tcp -dport 12345 -j REJECT
        deny from eno1234 access host's http:
            iptables -I INPUT -i eno1234 -p tcp -dport 80 -j REJECT
        reject access url
            iptables -I FORWARD -d www.baidu.com -j DROP
        reject user from 192.168.10.0 use net
            iptables -I FORWARD -s 192.168.10.0 -j DROP

        nat:
            iptables -t nat -A POSTROUTING -s 192.168.10.0/24 -o enoxxx -j SNAT --to-source xxxxxx
                内网ip转外网匹配部分两个，一个是元地址，一个是发送出去的对应网口，用于内部往外发送
                    这个网口没关系，因为外网地址没改，所以还是那个网口发出
            iptables -t nat -A PREROUTING -d xxxx -i enoxxx -p tcp -dport 80 -j DNAT --to-destination 10.0.0.2:22
                    这个里prerouting改，因为该了地址之后要路由的
            一般可以两条一起作用一个包，放在pre post里面，
                pre用来改变dest，路由之后，post用来改变source
            本地转发
                redirect --to-ports xxx

        accept:
            这个会停止当前chain以及当前表中的匹配，但是其他表里面还是会的，
                后续其他链好像也会的

        负载均衡 man iptables-extensions (8)
            iptables -A xxx   -m nth --counter 0 --every 3 --packet 0 -j DNAT --to-destination xx
            iptables -A xxx   -m nth --counter 0 --every 3 --packet 1
            iptables -A xxx   -m nth --counter 0 --every 3 --packet 2
                counter 这个是计数器，0-15
                    https://www.netfilter.org/documentation/HOWTO/netfilter-extensions-HOWTO-3.html

    扩展：
        -m multiport  多个离散端口 --dports --sports
        -m tcp/udp 默认对应-p tcp udp
        -m iprange --src-range --dst-range !xxx-xxx
        -m string --algo bm (使用bm字符串匹配算法） --string  "xxxx"  
            匹配到报文里有字符串。。。
        -m time
            匹配时间，具体看iptables-extensions , 多个条件是与的关系，所以可以用来取出含逗号的可选
                项目中的一个
        -m connlimit
            限制单ip链接的数量
            --connlimit-above 2 超过两个
            --connlimit-mask 24 掩码为24 ,组合上面，就变成限制某个ip区间了
        -m limit:
            limit rate
            注意不匹配的会一直往下走，所以后面还要增加一个拒绝规则 --limit 10/minit(也就是6秒钟一个）
            --limit-burst 初始的已经存在的令牌，每个limit单位之间产出一个令牌，也就是允许进入，
                这个是一开始允许的令牌数量，默认是5,所以相当于不设置的话，一开始默认可以放行5个包，然后
                才会进入匹配
        -m tcp --tcp-flags xx,xx,xx  yy,yy
            第一部分是用来匹配的部分的列表，可以all，第二部分是必须设置的位，没写出的必须不设置
            --syn 省略写法
        -m icmp  -h 这样可以查看所有名字
            --icmp-type 8/0(or  8) 或者type-name  这个是type/code  每个type有多个code细分的 
                
                8/0代表ping echo
                0/0代表ping back
        -m state
            --state  RELATED 表示ftp一样的数据端口
                    ESTABLISHED 表示new之后的所有包
                    new 表示往来的地一个包，包括udp， icmp等 
                    iptables -t filter -I INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
                    iptables -t filter -A INPUT -j REJECT
                        这样就只允许本机发起的链接了

        网络防火墙：
            过滤转发，所以功能定义在forward链里面
                /proc/sys/net/ipv4/ip_forward = 1
            放行响应报文，同时允许内部发出请求报文：
                iptables -t filter -m state --state RELATED,ESTABLISHED -j ACCEPT
                iptables -t filter -s xx -p tcp --dport 80 -j ACCEPT
                iptables -t filter -j REJECT

        扩展动作
            REJECT：
                --reject-with  不同的信息，看man
            LOG 
                --log-level
                --log-prefix 通过var/log/message查看

            nat:
                具体是napt ，nat的一种，映射port和ip
                dnat snat 名字取决于整个传输第一阶段是dnat还是snat
            SNAT
                -t nat -A POSTROUTING/input --to-source xxx
            MASQUERADE 
                自动转化
            DNAT 
                -t nat -A PREROUTING/output --to-destination xxx:xx 用于想外面提供服务
                    要在查看本机路由表之前修改，不然不就错了嘛
                这两个其中一个就可以双向了，内部会维护映射表
                注：实际只有snat是双向的，dnat要配合一个snat才行
            REDIRECT
                --do-ports 本地端口转换 PREROUTING/OURPUT

            注意nat和普通网关不同，nat作用于地址是自己但实际上要进入私有网络的包，所以匹配的dest地址都是自己
            而网关在forward里面作用，用于转发，双方都可以正确制定对方地址的，不在input/output里面设置

firewall-cmd:
    --permanent  只有重启服务才有用，如果要runtime，那就再运行一边除掉这个选项
            或者使用--reload 让permanent的立刻生效
    firewall-cmd --permanent --zone=public --add-forward-port=port=xxx:proto=xx:toport=xx:toaddr=xx

    zone 就是默认的一套规则集合，开箱即用，也可以创建新的
    --panic-on 断开所有链接，包，紧急断网模式

    firewall-cmd --zone=public --add-service=https /--remove-service=http
                            --add-port=1111-2222/tcp
                            --list-ports
                            --change-interface=xxx  改变网口到这个zone
                            --add-rich-rule='xxxxxxx'  man firewalld.richlanguage
                         eg --add-rich-rule='rule family="ipv4" source address="xxx/xx" service name="xx" reject'

etc/hosts.allow
etc/hosts.deny
    前者先查看，最后默认全部允许如果全不匹配

