gdb -tui:
	open a tui, upper is source code window, use 'l linenumber' can change show,
		use up, down can select
	break, tbreak:
		latter one only take effect frist time
	until number,  
		run until the specifed line, or current line(used in loop)
	finish:
		run until current frame finish(so cur function finish)
	step, next:
		former will check into function
	watch ( a > 3)
		set a watch point, when condition is true, will stop
	frame n , up , down, bt
		to select frame, up to origin, down to current
	help 
		to get help
	
tbreak, watch:(use corresponding   clear to" clean "that bp)
	break linenum
	break func
	break file:func
	break file:line
	break +offset  -offset
	break *address

delete breaknum
	( in .gdbinit should use set confirm off)

disable :(no arg to disable all)
	disable breaknum breaknum ...
enable:
	enable .. ... .. 
enable once xxx 
	just enable once , and disable

clear  breakline
	
change concentrate:(then break will choose that file default):
	list file
	run into one file
	break into one file

debuginfo-install  to install glibc debuginfo, then we can
	set break point into glibc's crti.so crtn.so ....

.gdbinit under project dir, under home dir for global setting

-command=xxx :
	read command from xxx and run a exec ( the sequence is unknown now ??)
