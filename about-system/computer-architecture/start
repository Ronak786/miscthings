翻译：就是一种语言换成等价的另一种语言，然后执行
解释：用另一种语言写的解释器按顺序读入第一种语言的代码，动态执行对应的操作

计算机结构：
数字逻辑层： 门电路（本身由晶体管组成）来组成寄存器和其他功能单元
微体系结构： 控制对寄存器和其他算数逻辑单元的操作(取址，译码等）
isa层：		 对外的指令集合，下层解释这些
			曾经肆意扩展微指令以完成操作系统想完成的功能，放在指令集里，后来太慢，就缩减
			指令集
操作系统层： 混合了isa的以及os的一些指令，某些由解释成isa指令执行，某些直接就是isa指令
汇编层：	 人可识别的符号
高级语言：	 更人性化，会转换成汇编

软硬件逻辑等同，按时代的需求，某些硬件，某些软件实现

如果只有isa和门电路，电路设计会十分麻烦，所以中间有一个微程序层，
	可以硬件可以软件


从17世纪的机械式计算机，到后来的电磁继电器加电子管（20世纪40年代 eniac  edvac）
冯诺依曼就是40年代计算机的改良者，不使用开关而是使用数字信号，使用二进制来制造
而在它之前式19世纪的巴贝奇和ada的差分机(ada第一个汇编程序员)
	冯诺依曼确立了输入输出存储计算控制 的体系结构  这个时代使用电子管
	50年代701计算机出现后，ibm开始从事计算机行业
50年代同样发明晶体管，开始出现这种计算机，pdp-1 由dec生产出来
到60年代，一方面出现了更廉价更快的，一方面出现了专注性能更快的，
	还有考虑编程语言的机器，IBM在超级计算机和小型机市场都扩展了

50年代末出现了集成电路，单芯片由多个晶体管，ibm开始基于这个
	推出系列机，就是同类型不同档次的机器，理论互相兼容程序--system360
	拥有多道程序处理系统
	使用微程序来兼容指令，内存也加大了， 同时dec推出pdp-11 
	unix最初就是这个上面设计出来的，小型机称为大学教学先锋

80年代出现超大规模集成电路，在当时没有出售成套pc的时候（都是
出售套件零件，自己组装使用），使用市场零件拼凑的方法
开发了ibmpc，开始成就intel，同时占领市场，其他非兼容机
只有很少的如apple存留
	后来使用微软操作系统，msdos，后来闹翻，却成就了
	开发出来的windowns和intel的组合

85年推出386，80中期开始流行risc，90年代出现超标量计算机，可以
同时处理多条指令在一个周期， 92年dec推出alpha 64位机，当时市场上
才刚到32位

如今更过的是嵌入各个领域，各个部件内部的微型计算系统

摩尔定律，单芯片i集成电路晶体管数量18月翻倍
	然而原子数量越来越少，量子影响增加，可能不行了
	软件也在推动硬件的发展，互相促进

ide：集成驱动器电路，也就是控制器和驱动器放在一起,然后和硬盘放在一起
	从早期的扇区式寻址，到后来突破界限的lba逻辑引用地址
	后来逐渐编程ata3 .。。sata，串行传输，降低功耗，同时
	提高了速度，增加了lba的容量

scsi: 这个是接口，也是总线，可以串行连接多个设备，
	同时由于允许多个设备同时通信，所以需要总线仲裁，
	ata只允许一个设备在一个时间使用总线

汉明编码：
	这个是 校验码n+1位，可以检错n位
			校验码2n+1位，可以纠错n位 的编码

raid0: 一次读的内容可以分布在多个盘上的话，可以提升一点读的性能
raid1: 读可以并行
raid2: 使用汉明 对字节或字进行编码，散布在每个盘上，这样每次都是写所有盘，
		其实写挺快的，就是需要所有盘同步转，所以不快,而且为编码数量浪费机器
raid3:校验在一个盘上,同样是对位的校验
raid4:对带校验写在同一个盘上
raid5：校验分布不同盘
