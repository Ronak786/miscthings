/*
 * 初始化，传入外部PkgHandle实例
 * 成功0，错误-1
 */
int init_handle(PkgHandle &hdl);

/*
 * 反初始化，需要在最后调用，涉及内存释放
 * 成功0，错误-1
 */
void uninit_handle(PkgHandle &hdl);

/*
 * 用于传入命令行参数，调用的时候可以利用仿命令行形式
 * int ac = 2; char *av[2] = {NULL, "/path/to/config/file"}；
 * 然后传入即可 
 * 成功0，错误-1
 */
int load_config(int ac, char*av[]);

/*
 * 获取远程包列表信息，检测是否有新包需要安装
 * true 需要
 * false 不需要
 */
bool get_and_check(PkgHandle &hdl);

/*
 * 获取需要安装的包列表，具体的可获取信息查看pkginfo类的头部
 * 目前只支持获取名字以及版本以及描述信息
 */
const std::vector<PkgInfo>& getnewpkglist(PkgHandle &hdl);

/*
 * 开始下载安装
 * 成功0，错误-1
 */
int updatepkgs(PkgHandle &hdl);

/*
 * return list of local installed file
 */
std::vector<PkgInfo> getlocalpkglist(PkgHandle &hdl);


文件位置：
config file： /persistent/pkgmanagement/conf/config.json 需要设置ftp的用户名，密码以及对应的ftp上的包所在路径
lib        :  /persistent/lib/libpkglib.so  /persist/lib/libsigutil.so /lib/libcrypto.so
head files :  /persist/usr/include/{pkghandle.h,pkginfo.h,pkgmgnt.h}
demo  运行 :  /persist/bin/pkgmgnt  /persist/pkgmanagement/conf/config.json
demo 源码  :  pkgmgnt.cpp
远程服务器上的路径下的包：/persist/tmp/arm/remote.tgz 把这个放到ftp服务器上，解压，然后把
				里面的文件拷贝到ftp服务器路径下



