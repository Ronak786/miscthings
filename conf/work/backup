需要整理做过的事情

莫名其妙的函数返回处停止执行，可能是栈空间溢出
system make status
    PLATFORM_VERSION_CODENAME=REL
    PLATFORM_VERSION=6.0
    TARGET_PRODUCT=full_tek6737t_36_m0
    TARGET_BUILD_VARIANT=eng
    TARGET_BUILD_TYPE=release
    TARGET_BUILD_APPS=
    TARGET_ARCH=arm
    TARGET_ARCH_VARIANT=armv7-a-neon
    TARGET_CPU_VARIANT=cortex-a53
    TARGET_2ND_ARCH=
    TARGET_2ND_ARCH_VARIANT=
    TARGET_2ND_CPU_VARIANT=cortex-a53
    HOST_ARCH=x86_64
    HOST_OS=linux
    HOST_OS_EXTRA=Linux-4.4.0-116-generic-x86_64-with-Ubuntu-14.04-trusty
    HOST_BUILD_TYPE=release
    BUILD_ID=DRVI-1.7.9.d-20180316
    OUT_DIR=out

poweroff charging ?? 这个不在判定的需要显示sha的范围内

新定义的应用放在external/ex-cynovo 中
然后在device/teksun/tekxxxx/cynovo/cynovo.mk 中添加对应目录

work things:
    1, replace image of recovery and update stage
        in bootable recovery, replace image
            note: from android 5.0, pics are packed by interlace python script
                into one pic
                the process bar also can be changed into series of images
            note:
                recovery and update use the same image source, inside code
                use type to distinguish
    2, add water mark
        use skia library to add watermark on screen
            skia used together with surface component
        transparent set use surface's alpha set better

        note:
            in cpp file compile, head file's declaration use extern better!

./mk -t mm external/Cpos_Watermark

adb shell am start -n com.android.settings/.Settings  启动设置界面

版本更新 
    mediatek/config/pangu/cynovo/cynovo.mk 更新版本号，上传
    然后gitlanb里面new branch 按照格式更新版本号
    然后登陆gitlab的服务器，修改build pangu脚本里的版本号，然后编译即可
    ip: 192.168.1.249  user: em  dir: ~/dev/release


6737中使用了imageinfo类在bitmap中替代setconfig

dest:
    set listener on systemproperty
        init.h  property_changed will be called when set property 

        queue_builtin_action in init_parse add action to action list
            in name ,should  property:name=expected_value
            everytime catch, should reset

        property_set->property_changed->queue_property_triggers
            ->queue_proproty_triggers to queue action
                if value changed to that(then will be called)
            execute_one_command in main

    need to do:
        there are two properties, image and text
        add in init.rc a property listener, when change,
            call a function

        current process start threads show depend on property
            first check and set if show, then register signal,
            now sleep,
            whenever changed, the function called, send signal to 
            the process(thread should block all signals),
            process change show value, kill threads, start again

    chinese  wide char problem
        显示是怎么消失的，一定要杀掉进程吗，能不能只杀线程
            目前无法做到消失，折中办法，设置透明度为0

    mediatek/external/ex-cynovo/protected-cynovo/main.c


    next todo:
        adb remount disable

    external/sepolicy/app.te
    external/sepolicy/init.te

    修改system/core/adb/sockets

    selinux 自定义文件
        device/mediatek/common/sepolicy


next to do:
    潜入mkimage 添加hash的方法 对于bootimg
    打印计算hash的时间


bmp to raw 颜色失真
    ~/gitbase/pangu_mt6582/mediatek/custom/common/lk/logo/tool
    ~/gitbase/pangu_mt6737/vendor/mediatek/proprietary/bootable/bootloader/lk/dev/logo/tool
    
    mboot_common_load_logo

    fill_animation_logo(show_animation_common.c, see project/PROJECT's rule.mk to include bmps)
    in init_fb_screen  set screen struct

    ./device/mediatek/mt6735/init.mt6735.rc  包含了调用logo的地方


./build/tools/releasetools/ota_from_target_files -s device/mediatek/build/releasetools/mt_ota_from_target_files.py --block -i /home/sora/tmp/ota.zip  /home/sora/tmp/ota2.zip /home/sora/tmp/ota1_to_2.zip
    升级包制作命令
make otapackage 制作出全量以及用来制作增量的原始ota包



uart in preloader: /home/sora/gitbase/pangu_mt6737/vendor/mediatek/proprietary/bootable/bootloader/preloader/platform/mt6735/src/drivers  inc/mt67xx.h
                            serial is UART1, so is UART_BASE0

        echo 31 >/proc/c650_ctrl

lib/libc/printf.c include  include/debug.h has _dputc defined in platform/mt67xx
        which use uart_putc in uart.c include .h is include/dev/uart.h

        uart_putc in uart.c  , declare in include/dev/uart.h
        _dputc in platform/mt6735/debug.c declare in include/debug.h
        putc in lib/libc/printf use _dputc ceclare in include/stdio.h

问题
    水印显示属性比较

    不断重启，可能read里面少量超时，要喂狗


step:
    make distclean
    make Penguin_defconfig
    make kernel.img 

    make clean
    make update-api -j4
    make -j4

    ./mkimage.sh ota

    cd rockdev
    rm update-unlock*
    rm update-lock*
    ./mkupdate.sh 



no use apks:
see this https://bitlog.it/mobile/dissecting-an-android-chinaphone/
../device/google/atv/products/atv_base.mk ?? include apks ?
    ../vendor/mediatek/proprietary/packages/apps/CalendarImporter
    ../frameworks/base/packages/CaptivePortalLogin   used in webpage wifi?
    ../vendor/mediatek/proprietary/packages/apps/AutoDialer
    ../vendor/mediatek/proprietary/packages/apps/BtTool
    ../vendor/mediatek/proprietary/packages/apps/Bypass
    ../packages/apps/HTMLViewer
    ../vendor/mediatek/proprietary/packages/apps/YGPS
    ../vendor/mediatek/proprietary/packages/apps/EngineerMode
    UserDictionaryProvider
    VoiceCommand
    /VoiceUnlock
    testapk
    CalendarProvider
    CallLogBackup
    ContactsProvider
    TeleService
    Telecom
    TelephonyProvider
    WiFiTest



led:
    led-core  led-class led-triggers ledtrig-timer

LightsService->native method->
"./hardware/libhardware/include/hardware/lights.h" get lights's head
vendor/mediatek/proprietary/hardware/liblights/lights.c  this is the
    lights.mt6737t.so  library, color is set according to color offset

/home/sora/gitbase/pangu_mt6582/frameworks/base/core/res/res/values 
    this is the place to get color of light


statusbar的出现流程：
res/values/config。xml 里面有config_statusBarComponent，这个设定了
    src/com/android/systemui/SystemUIService.java will inflate  SystemBars
     in SystemBars: createStatusBarFromConfig里面设定了启动的statusbar，就是我们的phonestatusbar
     in phonestatusbar: start()is called -> super.start()-> createAndAddwindows()->
        addstatusbarwindow->makestatusbarview->
        inflate from super_status_bar.xml into mStatusBarWindow,->
            (the xml will inflate notificationpanel.java->kivvipanel->monitorkivvipanel
            这个会监控图标状态)
        mSettingsContainer != NULL -> create QuickSettings.java ->
        call setup() -> do other settings in setupQuickSettings() and updateResources()

        疑问：
            setup内有setupquicksetting的原本代码，包括airmode等，这些是否不需要了
                还有和wifi相关的long press

ro.serialno  ,this is the serial number in android.os.Build get from meta.init
from lk in boot_linux_fdt

device/mediatek/mt6735/BoardConfig.mk   basic configuration of boot rom

利用proinfo的目前版本不适用的空间，可以存储serial number， 可以获取

Scatter file 生成:t 
    device/mediatek/build/build/tools/ptgen/MT6737T/ptgen.pl 包含了生成scatterfile的过程 , 通过ptgen。mk获取需要的环境名字，包括bin文件的名字，
        而scatter file由同目录下的emmc。yaml生成，在pt的pl中arglist里面强制制定的

proinit .bin's config file is vendor/mediatek/proprietary/custom/tek6737t_36_m0/cgen/cfgdefault/CFG_PRODUCT_INFO_Default.h


question
    isDeviceIdAbnormal in  frameworks/opt/telephony/src/java/, if Long.parselong() exception will except, check that!!
    frameworks/opt/telephony/src/java/com/android/internal/telephony/gsm/GsmServiceStateTracker.java 
        same_imei invalid_imei
