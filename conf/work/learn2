main function in mt_boot.c  mboot_android_check_bootimg_hdr
lk start:
    mt_boot_init->boot_linux_from_storage(NORMAL_BOOT)-> mboot_android_check_bootimg_hdr-> mboot_android_check_bootimg_hdr
                                                    -> mboot_android_check_bootimg_hdr-> mboot_android_check_bootimg_hdr

in file:
    read whole img size including header, onto kernel addr , this is wrield!!

在lk。bin后面加上额外数据
    注意lk。bin的内部data必须对其16字节，所以需要适当往后添加0,之后才是
    你添加的数据
boot.img后面直接加即可，但是注意本来就多读了2048字节，这里还是添加了新的部分，没有就地使用

刷新屏幕，使用surface lock anativewindow_buffer ,然后unlock，
    设置dirty区域为0,这样就不会产生黑区域了



如何发release       (one)        (two)
    更新然后clean pangu6737 and pangu6737t, clean
    copy one into two, checkout(restore) lk and preloader,
    check every file, add (added by cynovo tag)
    use beyond compare to get diff files, copy out them into a file
