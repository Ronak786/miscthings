set nocompatible
set nu
set ruler
set autowrite
"this hidden used to prevent warning when switch pass an unsaved buffer
set hidden
set shiftwidth=4
set softtabstop=4
set expandtab
set tabstop=4
set history=200
set wildmode=longest,list
set pastetoggle=<f5>
let mapleader=","
noremap \ ,
syntax on
filetype plugin indent on
runtime macros/matchit.vim
set incsearch
set hlsearch
cnoremap <expr> %% getcmdtype( ) == ':' ? expand('%:h').'/' : '%%'
cnoremap <C-p> <Up>
cnoremap <C-n> <Down>
nnoremap <silent> [b :bprevious<CR>
nnoremap <silent> ]b :bnext<CR>
nnoremap <silent> [B :bfirst<CR>
nnoremap <silent> [B :blast<CR>
"iterate in one arglist
nnoremap <silent> [a :prev<CR> 
nnoremap <silent> ]a :next<CR>
noremap  <C-k> <C-w>-
noremap  <C-j> <C-w>+
noremap  <C-n> <C-w><
noremap  <C-\> <C-w>>
"subsequent two no use
"noremap <Leader>n nzz
"noremap <Leader>N Nzz
execute pathogen#infect()
if has("cscope")  
    set csprg=/usr/bin/cscope  
    set csto=0  
    set cst  
    set csverb  
    set cspc=3  
    "add any database in current dir  
    if filereadable("cscope.out")  
	    cs add cscope.out  
    "else search cscope.out elsewhere  
    else  
      let cscope_file=findfile("cscope.out", ".;")  
      let cscope_pre=matchstr(cscope_file, ".*/")  
      if !empty(cscope_file) && filereadable(cscope_file)  
	exe "cs add" cscope_file cscope_pre  
      endif        
    endif  
endif  
"inoremap jj <Esc> 
