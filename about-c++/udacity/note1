endl pro to \n:
	endl will append a flush, so will output immediately

io format:
#include <iomanip>
	setw(): used to set width of stream for next output
		cout << setw(20) << "what";
			and will right align

filestream:
	#include <fstream>
	#include <string>
	string line;
	ifstream fs("filename")
	fs.is_open()
	while (getline(fs, line)) {
	}
	fs.close()

	ofstream("filename", ios::flags)
	if (ofs.is_open())
		ofs << xxxxxx ;
	ofs.close();

std out in:
	cout << "xxxx";
	cin >> vars;
	getline(cin, line);

	cons:
		cin will be interrupted by space

	hanle ignore():
		when get input, use cin.ignore(number, match_chr);
		to ignore number characters or until match_chr is
		matched, used to eat up until \n

stringstream:
	#include <sstream>
	streamstring(string) >> (int)val
	or stringstream ss; ss.str(xxxx);
		note: c++ can directly construct an object this way

	handle fail:
		while (ss >> var || !ss.eof()) {
			if (ss.fail()) {
				ss.clear();
				string dummy;
				ss >> dummy; // skip error string
				continue;
			}
		}
		eof check should in outer loop and
			eof will set along with fail
			Only when read fail at end then
				the eof will set, so just read
				then last word of file will not
				result in eof being set
			usually only read will reach end, and
				read attend that place means read
				will return fail, so fail and eof
				both set

	
